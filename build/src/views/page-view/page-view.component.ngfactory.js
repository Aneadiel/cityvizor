/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '../../../../src/views/page-view/page-view.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/router/src/router_state';
import * as import9 from '@angular/http/src/http';
import * as import10 from './page-view.style.css.shim.ngstyle';
import * as import11 from '@angular/core/src/change_detection/change_detection_util';
import * as import12 from '@angular/core/src/security';
var Wrapper_PageViewComponent = (function () {
    function Wrapper_PageViewComponent(p0, p1) {
        this._changed = false;
        this.context = new import0.PageViewComponent(p0, p1);
    }
    Wrapper_PageViewComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_PageViewComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_PageViewComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_PageViewComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_PageViewComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_PageViewComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_PageViewComponent;
}());
export { Wrapper_PageViewComponent };
var renderType_PageViewComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_PageViewComponent_Host0 = (function (_super) {
    __extends(View_PageViewComponent_Host0, _super);
    function View_PageViewComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_PageViewComponent_Host0, renderType_PageViewComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_PageViewComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'page-view', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_PageViewComponent0(this.viewUtils, this, 0, this._el_0);
        this._PageViewComponent_0_3 = new Wrapper_PageViewComponent(this.injectorGet(import8.ActivatedRoute, this.parentIndex), this.injectorGet(import9.Http, this.parentIndex));
        this.compView_0.create(this._PageViewComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._PageViewComponent_0_3.context);
    };
    View_PageViewComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.PageViewComponent) && (0 === requestNodeIndex))) {
            return this._PageViewComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_PageViewComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._PageViewComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_PageViewComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_PageViewComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_PageViewComponent_Host0;
}(import1.AppView));
export var PageViewComponentNgFactory = new import7.ComponentFactory('page-view', View_PageViewComponent_Host0, import0.PageViewComponent);
var styles_PageViewComponent = [import10.styles];
var renderType_PageViewComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.Emulated, styles_PageViewComponent, {});
var View_PageViewComponent0 = (function (_super) {
    __extends(View_PageViewComponent0, _super);
    function View_PageViewComponent0(viewUtils, parentView, parentIndex, parentElement) {
        var _this = _super.call(this, View_PageViewComponent0, renderType_PageViewComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
        _this._expr_1 = import11.UNINITIALIZED;
        return _this;
    }
    View_PageViewComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'container page'), null);
        this.init(null, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_PageViewComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.context.pageContent;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import12.SecurityContext.HTML, currVal_1));
            this._expr_1 = currVal_1;
        }
    };
    return View_PageViewComponent0;
}(import1.AppView));
export { View_PageViewComponent0 };
//# sourceMappingURL=page-view.component.ngfactory.js.map