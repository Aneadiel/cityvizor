/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '../../../../../src/shared/components/chart-donut/chart-donut.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/common/src/directives/ng_if';
var Wrapper_ChartDonutComponent = (function () {
    function Wrapper_ChartDonutComponent() {
        this._changed = false;
        this.context = new import0.ChartDonutComponent();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_ChartDonutComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ChartDonutComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_ChartDonutComponent.prototype.check_data = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.data = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ChartDonutComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ChartDonutComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ChartDonutComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ChartDonutComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ChartDonutComponent;
}());
export { Wrapper_ChartDonutComponent };
var renderType_ChartDonutComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_ChartDonutComponent_Host0 = (function (_super) {
    __extends(View_ChartDonutComponent_Host0, _super);
    function View_ChartDonutComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_ChartDonutComponent_Host0, renderType_ChartDonutComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_ChartDonutComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'chart-donut', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_ChartDonutComponent0(this.viewUtils, this, 0, this._el_0);
        this._ChartDonutComponent_0_3 = new Wrapper_ChartDonutComponent();
        this.compView_0.create(this._ChartDonutComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._ChartDonutComponent_0_3.context);
    };
    View_ChartDonutComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ChartDonutComponent) && (0 === requestNodeIndex))) {
            return this._ChartDonutComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_ChartDonutComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ChartDonutComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_ChartDonutComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_ChartDonutComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ChartDonutComponent_Host0;
}(import2.AppView));
export var ChartDonutComponentNgFactory = new import8.ComponentFactory('chart-donut', View_ChartDonutComponent_Host0, import0.ChartDonutComponent);
var styles_ChartDonutComponent = [];
var View_ChartDonutComponent1 = (function (_super) {
    __extends(View_ChartDonutComponent1, _super);
    function View_ChartDonutComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        var _this = _super.call(this, View_ChartDonutComponent1, renderType_ChartDonutComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways, declaredViewContainer) || this;
        _this._expr_1 = import1.UNINITIALIZED;
        return _this;
    }
    View_ChartDonutComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, ':svg:path', new import3.InlineArray8(6, 'fill', '#E73431', 'stroke', '#E73431', 'stroke-width', '10'), null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_ChartDonutComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.parentView.context.generateStripePath(500, 500, 250, 500, 0, (this.parentView.context.data.budgetAmount ? (this.parentView.context.data.expenditureAmount / this.parentView.context.data.budgetAmount) : 0));
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_0, 'd', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
    };
    View_ChartDonutComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ChartDonutComponent1;
}(import2.AppView));
var View_ChartDonutComponent2 = (function (_super) {
    __extends(View_ChartDonutComponent2, _super);
    function View_ChartDonutComponent2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        var _this = _super.call(this, View_ChartDonutComponent2, renderType_ChartDonutComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways, declaredViewContainer) || this;
        _this._expr_1 = import1.UNINITIALIZED;
        return _this;
    }
    View_ChartDonutComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, ':svg:path', new import3.InlineArray8(6, 'fill', '#E73431', 'stroke', '#E73431', 'stroke-width', '10'), null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_ChartDonutComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.parentView.context.generateStripePath(500, 500, 250, 500, 0, 0.001);
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementAttribute(this._el_0, 'd', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
    };
    View_ChartDonutComponent2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ChartDonutComponent2;
}(import2.AppView));
var renderType_ChartDonutComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_ChartDonutComponent, {});
var View_ChartDonutComponent0 = (function (_super) {
    __extends(View_ChartDonutComponent0, _super);
    function View_ChartDonutComponent0(viewUtils, parentView, parentIndex, parentElement) {
        var _this = _super.call(this, View_ChartDonutComponent0, renderType_ChartDonutComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways) || this;
        _this._expr_14 = import1.UNINITIALIZED;
        return _this;
    }
    View_ChartDonutComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, ':svg:svg', new import3.InlineArray4(4, 'style', 'width: 100%;', 'viewBox', '0 0 1000 1000'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n	', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, ':svg:path', new import3.InlineArray8(6, 'fill', '#ff9491', 'stroke', '#fff', 'stroke-width', '10'), null);
        this._text_3 = this.renderer.createText(this._el_0, '\n\n	', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_4 = new import9.ViewContainer(4, 0, this, this._anchor_4);
        this._TemplateRef_4_5 = new import11.TemplateRef_(this, 4, this._anchor_4);
        this._NgIf_4_6 = new import10.Wrapper_NgIf(this._vc_4.vcRef, this._TemplateRef_4_5);
        this._text_5 = this.renderer.createText(this._el_0, '\n	', null);
        this._anchor_6 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_6 = new import9.ViewContainer(6, 0, this, this._anchor_6);
        this._TemplateRef_6_5 = new import11.TemplateRef_(this, 6, this._anchor_6);
        this._NgIf_6_6 = new import10.Wrapper_NgIf(this._vc_6.vcRef, this._TemplateRef_6_5);
        this._text_7 = this.renderer.createText(this._el_0, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._anchor_4,
            this._text_5,
            this._anchor_6,
            this._text_7
        ]), null);
        return null;
    };
    View_ChartDonutComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import12.NgIf) && (4 === requestNodeIndex))) {
            return this._NgIf_4_6.context;
        }
        if (((token === import11.TemplateRef) && (6 === requestNodeIndex))) {
            return this._TemplateRef_6_5;
        }
        if (((token === import12.NgIf) && (6 === requestNodeIndex))) {
            return this._NgIf_6_6.context;
        }
        return notFoundResult;
    };
    View_ChartDonutComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_4_0_0 = this.context.data.expenditureAmount;
        this._NgIf_4_6.check_ngIf(currVal_4_0_0, throwOnChange, false);
        this._NgIf_4_6.ngDoCheck(this, this._anchor_4, throwOnChange);
        var currVal_6_0_0 = (this.context.data.budgetAmount && (this.context.data.expenditureAmount === 0));
        this._NgIf_6_6.check_ngIf(currVal_6_0_0, throwOnChange, false);
        this._NgIf_6_6.ngDoCheck(this, this._anchor_6, throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
        this._vc_6.detectChangesInNestedViews(throwOnChange);
        var currVal_14 = this.context.generateStripePath(500, 500, 250, 400, (this.context.data.budgetAmount ? (this.context.data.expenditureAmount / this.context.data.budgetAmount) : 0), (this.context.data.budgetAmount ? (1 - (this.context.data.expenditureAmount / this.context.data.budgetAmount)) : 0));
        if (import3.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this.renderer.setElementAttribute(this._el_2, 'd', ((currVal_14 == null) ? null : currVal_14.toString()));
            this._expr_14 = currVal_14;
        }
    };
    View_ChartDonutComponent0.prototype.destroyInternal = function () {
        this._vc_4.destroyNestedViews();
        this._vc_6.destroyNestedViews();
    };
    View_ChartDonutComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 4)) {
            return new View_ChartDonutComponent1(this.viewUtils, this, 4, this._anchor_4, this._vc_4);
        }
        if ((nodeIndex == 6)) {
            return new View_ChartDonutComponent2(this.viewUtils, this, 6, this._anchor_6, this._vc_6);
        }
        return null;
    };
    return View_ChartDonutComponent0;
}(import2.AppView));
export { View_ChartDonutComponent0 };
//# sourceMappingURL=chart-donut.component.ngfactory.js.map